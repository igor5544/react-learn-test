{"version":3,"sources":["components/common/FormsControls/FormsControls.js","components/common/FormsControls/formsControls.module.css","utils/validators/validators.js","styles/login.module.css","pages/Login.js","pages/LoginContainer.js"],"names":["FormControl","children","meta","props","hasError","touched","error","className","s","wrapperclass","Textarea","input","restProps","Input","Checkbox","label","htmlFor","id","module","exports","required","value","undefined","maxLengthCreator","maxLenght","length","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","type","name","placeholder","component","validate","MainBtn","Login","login","isAuth","to","formData","email","password","rememberMe","mapDispatchToProps","compose","connect","state","auth"],"mappings":"2QAGaA,EAAc,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,KAASC,EAAY,mCACrDC,EAAWF,EAAKG,SAAWH,EAAKI,MAEtC,OACE,yBAAKC,UAAS,UAAKC,IAAE,gBAAP,aAA2BJ,GAAYI,IAAEF,MAAzC,YAAkDH,EAAMM,eACnER,EAECG,GAAY,+BAAKF,EAAKI,MAAV,OAMPI,EAAW,SAACP,GAAW,IAC1BQ,EAA8BR,EAA9BQ,MAAgBC,GAAcT,EAAvBD,KADkB,YACKC,EADL,mBAGjC,OAAO,kBAACH,EAAgBG,EAAO,8CAAcQ,EAAWC,MAG7CC,EAAQ,SAACV,GAAW,IACvBQ,EAA8BR,EAA9BQ,MAAgBC,GAAcT,EAAvBD,KADe,YACQC,EADR,mBAG9B,OAAO,kBAACH,EAAgBG,EAAO,2CAAWQ,EAAWC,MAG1CE,EAAW,SAACX,GAAW,IAC1BQ,EAAqCR,EAArCQ,MAAaI,GAAwBZ,EAA9BD,KAA8BC,EAAxBY,OAAUH,EADE,YACYT,EADZ,0BAGjC,OACE,kBAACH,EAAgBG,EACf,2CAAWQ,EAAWC,IACtB,2BAAOI,QAASJ,EAAUK,IAAKF,M,oBCjCrCG,EAAOC,QAAU,CAAC,MAAQ,+B,iCCD1B,oEAAO,IAAMC,EAAW,SAAAC,GACtB,OAAOA,OAAQC,EAAa,qBAGjBC,EAAmB,SAAAC,GAAS,OAAI,SAAAH,GAC3C,OAAOA,EAAMI,QAAUD,OAAYF,EAAa,8B,oBCJlDJ,EAAOC,QAAU,CAAC,MAAQ,uB,yJCgCpBO,EAAiBC,YAAU,CAC/BC,KAAM,SADeD,EAzBL,SAACxB,GACjB,OACE,0BAAMI,UAAW,YAAasB,SAAU1B,EAAM2B,cAC5C,kBAACC,EAAA,EAAD,CAAOC,KAAK,OAAOvB,aAAc,0BAA2BwB,KAAM,QAChEC,YAAY,QAAQC,UAAWtB,IAAOuB,SAAU,CAAChB,OAEnD,kBAACW,EAAA,EAAD,CAAOC,KAAK,WAAWvB,aAAc,0BAA2BwB,KAAM,WACpEC,YAAY,UAAUC,UAAWtB,IAAOuB,SAAU,CAAChB,OAErD,yBAAKb,UAAW,sBACd,kBAACwB,EAAA,EAAD,CAAOC,KAAK,WAAWC,KAAM,aAAchB,GAAG,WAAWF,MAAO,cAC9DoB,UAAWrB,OAIbX,EAAMG,OACN,uBAAGC,UAAWC,IAAEF,OACbH,EAAMG,OAGX,kBAAC+B,EAAA,EAAD,CAASL,KAAK,UAAd,aA2BSM,EAlBD,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,MAMf,OANmC,EAAbC,OAOb,kBAAC,IAAD,CAAUC,GAAG,aAIpB,iCACE,wBAAIlC,UAAU,cAAd,SACA,kBAACmB,EAAD,CAAgBG,SAZH,SAACa,GAAc,IACtBC,EAAgCD,EAAhCC,MAAOC,EAAyBF,EAAzBE,SAAUC,EAAeH,EAAfG,WACzBN,EAAMI,EAAOC,EAAUC,QC7BrBC,EAAqB,CACzBP,WAGaQ,sBACbC,aAXsB,SAACC,GACvB,MAAO,CACLT,OAAQS,EAAMC,KAAKV,UASIM,GADZC,CAEbT","file":"static/js/7.f062226f.chunk.js","sourcesContent":["import React from 'react';\nimport s from './formsControls.module.css';\n\nexport const FormControl = ({ children, meta, ...props }) => {\n  const hasError = meta.touched && meta.error;\n\n  return (\n    <div className={`${s['form-control']}  ${hasError && s.error} ${props.wrapperclass}`}>\n      {children}\n      {\n        hasError && <p> {meta.error} </p>\n      }\n    </div>\n  )\n}\n\nexport const Textarea = (props) => {\n  const { input, meta, ...restProps } = props;\n\n  return <FormControl {...props}><textarea {...input} {...restProps} ></textarea></FormControl>\n}\n\nexport const Input = (props) => {\n  const { input, meta, ...restProps } = props;\n\n  return <FormControl {...props}><input {...input} {...restProps} ></input></FormControl>\n}\n\nexport const Checkbox = (props) => {\n  const { input, meta, label, ...restProps } = props;\n\n  return (\n    <FormControl {...props}>\n      <input {...input} {...restProps} ></input>\n      <label htmlFor={restProps.id}>{label}</label>\n    </FormControl>\n  )\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"formsControls_error__3NdZw\"};","export const required = value => {\n  return value ? undefined :  'Field is required';\n}\n\nexport const maxLengthCreator = maxLenght => value => {\n  return value.length <= maxLenght ? undefined :  'Max length is 30 symblos';\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"login_error__jqtxu\"};","import React from 'react';\nimport s from '../styles/login.module.css';\nimport { Field, reduxForm } from 'redux-form';\nimport { Input, Checkbox } from '../components/common/FormsControls/FormsControls';\nimport { required } from '../utils/validators/validators';\nimport MainBtn from '../components/MainBtn';\nimport { Redirect } from 'react-router-dom';\n\nconst LoginForm = (props) => {\n  return (\n    <form className={'main-form'} onSubmit={props.handleSubmit}>\n      <Field type=\"text\" wrapperclass={'main-form__field-wrpper'} name={'email'}\n        placeholder=\"Login\" component={Input} validate={[required]}\n      />\n      <Field type=\"password\" wrapperclass={'main-form__field-wrpper'} name={'password'}\n        placeholder=\"Passwrd\" component={Input} validate={[required]}\n      />\n      <div className={'main-form__section'}>\n        <Field type=\"checkbox\" name={'rememberMe'} id=\"checkbox\" label={'Remember me'}\n          component={Checkbox}\n        />\n      </div>\n      {\n        props.error &&\n        <p className={s.error}>\n          {props.error}\n        </p>\n      }\n      <MainBtn type=\"submit\">Login</MainBtn>\n    </form>\n  )\n}\n\nconst LoginReduxForm = reduxForm({\n  form: 'login'\n})(LoginForm)\n\nconst Login = ({ login, isAuth }) => {\n  const onSubmit = (formData) => {\n    const { email, password, rememberMe } = formData;\n    login(email, password, rememberMe);\n  }\n\n  if (isAuth) {\n    return <Redirect to='/profile' />\n  }\n\n  return (\n    <section>\n      <h2 className=\"main-title\">Login</h2>\n      <LoginReduxForm onSubmit={onSubmit} />\n    </section>\n  )\n}\n\nexport default Login;\n","import { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { login } from '../redux/auth-reducer';\nimport Login from './Login';\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuth: state.auth.isAuth\n  }\n}\n\nconst mapDispatchToProps = {\n  login,\n}\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps)\n)(Login);\n"],"sourceRoot":""}