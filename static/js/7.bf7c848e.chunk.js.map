{"version":3,"sources":["components/common/FormsControls/FormsControls.js","utils/validators/validators.js","components/common/FormsControls/formsControls.module.css","styles/login.module.css","pages/Login.js","pages/LoginContainer.js"],"names":["FormControl","children","meta","props","hasError","touched","error","className","s","wrapperclass","Textarea","input","label","restProps","htmlFor","id","Input","Checkbox","required","value","undefined","maxLengthCreator","maxLenght","length","module","exports","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","type","name","placeholder","component","validate","style","marginBottom","captchaUrl","src","alt","width","height","captcha","MainBtn","Login","login","isAuth","to","formData","email","password","rememberMe","mapDispatchToProps","compose","connect","state","auth"],"mappings":"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","file":"static/js/7.bf7c848e.chunk.js","sourcesContent":["import React from 'react';\nimport s from './formsControls.module.css';\n\nexport const FormControl = ({ children, meta, ...props }) => {\n  const hasError = meta.touched && meta.error;\n\n  return (\n    <div className={`${s['form-control']}  ${hasError && s.error} ${props.wrapperclass}`}>\n      {children}\n      {\n        hasError && <p> {meta.error} </p>\n      }\n    </div>\n  )\n}\n\nexport const Textarea = (props) => {\n  const { input, meta, label, ...restProps } = props;\n\n  return <FormControl {...props}>\n    {label && <label htmlFor={restProps.id}>{label}</label>}\n    <textarea {...input} {...restProps} ></textarea>\n  </FormControl>\n}\n\nexport const Input = (props) => {\n  const { input, meta, label, ...restProps } = props;\n\n  return <FormControl {...props}>\n    {label && <label htmlFor={restProps.id}>{label}</label>}\n    <input {...input} {...restProps} ></input>\n  </FormControl>\n}\n\nexport const Checkbox = (props) => {\n  const { input, meta, label, ...restProps } = props;\n\n  return (\n    <FormControl {...props}>\n      <input {...input} {...restProps} ></input>\n      <label htmlFor={restProps.id}>{label}</label>\n    </FormControl>\n  )\n}","export const required = value => {\n  return value ? undefined :  'Field is required';\n}\n\nexport const maxLengthCreator = maxLenght => value => {\n  return value.length <= maxLenght ? undefined :  'Max length is 30 symblos';\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"formsControls_error__3NdZw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"login_error__jqtxu\",\"captcha\":\"login_captcha__3RzMG\"};","import React from 'react';\nimport s from '../styles/login.module.css';\nimport { Field, reduxForm } from 'redux-form';\nimport { Input, Checkbox } from '../components/common/FormsControls/FormsControls';\nimport { required } from '../utils/validators/validators';\nimport MainBtn from '../components/MainBtn';\nimport { Redirect } from 'react-router-dom';\n\nconst LoginForm = (props) => {\n  return (\n    <form className={'main-form'} onSubmit={props.handleSubmit}>\n      <Field type=\"text\" wrapperclass={'main-form__field-wrpper'} name={'email'}\n        placeholder=\"Login\" component={Input} validate={[required]}\n      />\n      <Field type=\"password\" wrapperclass={'main-form__field-wrpper'} name={'password'}\n        placeholder=\"Passwrd\" component={Input} validate={[required]}\n      />\n      <Field type=\"checkbox\" name={'rememberMe'} id=\"rememberMe\" label={'Remember me'}\n        component={Checkbox} style={{ marginBottom: '20px' }}\n      />\n      {props.captchaUrl &&\n        <>\n          <img src={props.captchaUrl} alt=\"captcha img\" width=\"200\" height=\"50\" className={s.captcha} />\n          <Field type=\"text\" wrapperclass={'main-form__field-wrpper'} name={'captcha'}\n            component={Input} validate={[required]}\n          />\n        </>\n      }\n      {\n        props.error &&\n        <p className={s.error}>\n          {props.error}\n        </p>\n      }\n      <MainBtn type=\"submit\">Login</MainBtn>\n    </form>\n  )\n}\n\nconst LoginReduxForm = reduxForm({\n  form: 'login'\n})(LoginForm)\n\nconst Login = ({ login, isAuth, captchaUrl }) => {\n  const onSubmit = (formData) => {\n    const { email, password, rememberMe, captcha } = formData;\n    login(email, password, rememberMe, captcha);\n  }\n\n  if (isAuth) {\n    return <Redirect to='/profile' />\n  }\n\n  return (\n    <section>\n      <h2 className=\"main-title\">Login</h2>\n      <LoginReduxForm onSubmit={onSubmit} captchaUrl={captchaUrl} />\n    </section>\n  )\n}\n\nexport default Login;\n","import { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { login } from '../redux/auth-reducer';\nimport Login from './Login';\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuth: state.auth.isAuth,\n    captchaUrl: state.auth.captchaUrl\n  }\n}\n\nconst mapDispatchToProps = {\n  login,\n}\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps)\n)(Login);\n"],"sourceRoot":""}